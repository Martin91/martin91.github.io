<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Allure on Hackerpie</title><link>https://blog.hackerpie.com/tags/allure/</link><description>Recent content in Allure on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 18 Dec 2022 21:03:20 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/allure/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducing the Schema of Allure Report Tool</title><link>https://blog.hackerpie.com/posts/testing/allure-report-beginners-guide/</link><pubDate>Sun, 18 Dec 2022 21:03:20 +0800</pubDate><guid>https://blog.hackerpie.com/posts/testing/allure-report-beginners-guide/</guid><description>Background In October, I claimed an issue on the company&amp;rsquo;s internal open source collaboration project. The task was to implement a test report visualization tool for the internal test framework. Because the display effect of Allure is really good, but there is no official detailed description of the underlying schema, so there are some gropings in the implementation process, and it is recorded here, hope it can help someone who may encounter similar problems.</description></item><item><title>Allure 测试报告可视化工具入门</title><link>https://blog.hackerpie.com/posts/testing/allure-report-beginners-guide-chinese/</link><pubDate>Sun, 18 Dec 2022 19:03:20 +0800</pubDate><guid>https://blog.hackerpie.com/posts/testing/allure-report-beginners-guide-chinese/</guid><description>背景 10月份在公司内部的开源协同项目上认领了一个 issue，任务是为内部测试框架实现一个测试报告可视化工具，当时对接人提供了 Allure 作为选型参考，最后经过一番摸索也终于实现了既定效果。因为 Allure 展现效果确实还不错，但是官方没有底层 schema 的详细说明，所以实现过程也有一些摸索，这里记录下，或许会有人遇到类似的问题。
什么是 Allure 框架？ Allure，全称 Allure Report，是一个跨编程语言的测试报告工具，通过定义统一的底层 Schema，官方提供了多个编程语言版本的适配实现，目前主要有 Java、JavaScript、Python、Ruby、PHP、Kotlin、.Net 以及 Go。
Allure 可以生成比较简洁的测试报告，报告划分“Overview”、“Categories”、“Suites”、“Graphs”、“Timeline”、“Behaviors”以及“Packages”几大板块，可以访问Allure demo 查看示例效果。如果需要了解更多不同的测试集展示的效果，可以访问 RESTest showcase 浏览。
allure demo 除此之外，Allure 也支持多语言切换，目前官方示例包含英语、中文、德语等在内的 12 种语言。
Allure 框架在各个编程语言之上构建实现了整个测试报告的生态：
allure architecture Allure Schema Allure 的跨编程语言特性得益于一套基于 JSON 格式的 Schema，官方在其各个编程语言版本的源码都有相关的定义，比如 Python 版的可以查看 allure-python-commons/src/model2.py。
但是官方对具体的 Schema 没有文字性的文档，所以 Schema 定义和最终生成报告中的效果的关联，没有确切的说明。我经过摸索和尝试，整理了 Schema 中各个模型的关系：
allure models 示例 为了直观对比 Schema 和最后生成的报告效果，可以查看这段 allure 的测试用例报告代码：
{ &amp;#34;name&amp;#34;: &amp;#34;test_shell_testcase_failed32&amp;#34;, // 测试用例名 &amp;#34;status&amp;#34;: &amp;#34;failed&amp;#34;, // 测试用例结果，在上图中对应 `Status` 枚举值定义 &amp;#34;steps&amp;#34;: [ // 测试步骤，在测试报告中展示在面板右下角的 Test body 里 { &amp;#34;name&amp;#34;: &amp;#34;#@ 测试步骤:17:&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;passed&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;#@ 测试步骤:28:&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;passed&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;#@ 测试步骤:39:&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;passed&amp;#34; } ], &amp;#34;start&amp;#34;: &amp;#34;1665562034999&amp;#34;, // 测试用例开始时间 &amp;#34;stop&amp;#34;: &amp;#34;1665562053613&amp;#34;, // 测试用例结束时间，和开始时间一起确定本用例的耗时，这里是 18s 614ms &amp;#34;uuid&amp;#34;: &amp;#34;test_python_testcase-result-37&amp;#34;, // uuid，这个可以由库代码自动生成 &amp;#34;testCaseId&amp;#34;: &amp;#34;20220411-152848-724647399&amp;#34;, // 同样可以由库代码自动生成 &amp;#34;labels&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;suite&amp;#34;, // 这是一个特殊的 label，当为 suite 时，value 表明当前用例对应的测试集名称 &amp;#34;value&amp;#34;: &amp;#34;tst_suite_common2&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;tag&amp;#34;, // tag 是普通的标签，显示在报告中的用例详情中 &amp;#34;value&amp;#34;: &amp;#34;feature&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;tag&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;medium priority&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;tag&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;level:3&amp;#34; }, { &amp;#34;name&amp;#34;: &amp;#34;tag&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;type:feature&amp;#34; } ] } 以上 schema 对应的测试报告如图： allure 对照示例 如何基于官方库实现标准的 schema 生成？ 以 python 为例，可以使用官方代码库 allure-python-commons 中的 AllureFileLogger。</description></item></channel></rss>