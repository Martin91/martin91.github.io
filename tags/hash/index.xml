<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hash on Hackerpie</title><link>https://blog.hackerpie.com/tags/hash/</link><description>Recent content in Hash on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Tue, 25 Mar 2014 20:05:00 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/hash/index.xml" rel="self" type="application/rss+xml"/><item><title>Ruby中Hash的7个日常使用范例</title><link>https://blog.hackerpie.com/posts/archive/rubyzhong-hashde-7ge-ri-chang-shi-yong-fan-li/</link><pubDate>Tue, 25 Mar 2014 20:05:00 +0800</pubDate><guid>https://blog.hackerpie.com/posts/archive/rubyzhong-hashde-7ge-ri-chang-shi-yong-fan-li/</guid><description>此文翻译自7 daily use cases of Ruby Hash，限于本人水平，翻译不当之处，敬请指教！
每一天，你都需要跟Hash相处。创建一个新的Hash或者是通过它的某一个键去检索其中的元素这样的工作，都是常见也是非常简单的。但是当你需要合并两个嵌套的Hash或者是从某一个Hash里边过滤某些键，你可能需要考虑得多一点。通过完整的文档，你可以找到对Hash中的每一个方法的充分解释。但是由于文档不是面向应用场景的，你可能没法很快找到你的解决方案。在下面，我分享了我日常中经常遇到的Hash中的7个常用场景，希望它们对你有用。
1. 如何将一个JSON转换为一个Hash？ 假设你刚刚接收到一个用JSON表示的Twitter账号的资料信息：
data = &amp;#39;{ &amp;#34;name&amp;#34;: &amp;#34;Aaron Patterson&amp;#34;, &amp;#34;screen_name&amp;#34;: &amp;#34;tenderlove&amp;#34;, &amp;#34;location&amp;#34;: &amp;#34;Seattle, WA&amp;#34; }&amp;#39; 你希望能够将它转化为一个Hash,这样会更方便你进行对数据的操作：
require &amp;#39;json&amp;#39; profile = JSON.parse(data) ** 在IRB中的输出结果：**
=&amp;gt; { &amp;#34;name&amp;#34;=&amp;gt;&amp;#34;Aaron Patterson&amp;#34;, &amp;#34;screen_name&amp;#34;=&amp;gt;&amp;#34;tenderlove&amp;#34;, &amp;#34;location&amp;#34;=&amp;gt;&amp;#34;Seattle, WA&amp;#34; } 查看文档：JSON#parse
2. 如何将一个Hash转换为一个JSON？ 在你的web应用程序中，你需要追踪当前星期每一天新注册用户的数量：
signups_of_the_week = { monday: 2, tuesday: 3, wednesday: 4, thursday: 20, friday: 5, saturday: 2, sunday: 5 } 你可以通过API的方式把它们以JSON格式提供给客户端：
require &amp;#39;json&amp;#39; signups_of_the_week.to_json ** 在IRB中的输出结果：**
=&amp;gt; &amp;#34;{\&amp;#34;monday\&amp;#34;:2,\&amp;#34;tuesday\&amp;#34;:3,\&amp;#34;wednesday\&amp;#34;:4,\&amp;#34;thursday\&amp;#34;:20,\&amp;#34;friday\&amp;#34;:5,\&amp;#34;saturday\&amp;#34;:2,\&amp;#34;sunday\&amp;#34;:5}&amp;#34; 查看文档：JSON#generate 边注：JSON#pretty_generate对于更好的打印以及调试非常有用。</description></item></channel></rss>