<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>模板 on Hackerpie</title><link>https://blog.hackerpie.com/tags/%E6%A8%A1%E6%9D%BF/</link><description>Recent content in 模板 on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 17 Jan 2016 01:40:00 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/%E6%A8%A1%E6%9D%BF/index.xml" rel="self" type="application/rss+xml"/><item><title>嘿，小心你的双等号==</title><link>https://blog.hackerpie.com/posts/archive/pay-attention-to-your-double-equals/</link><pubDate>Sun, 17 Jan 2016 01:40:00 +0800</pubDate><guid>https://blog.hackerpie.com/posts/archive/pay-attention-to-your-double-equals/</guid><description>前两天在写代码的时候，突然收到警告说项目代码中存在 XSS 漏洞，遂立即根据报告的 URL 排查页面代码，虽然很快就修复了，而且同样问题的讨论两年前就有了，看RubyChina: 别用 raw 和 html_safe，一般来说相对有经验的老鸟也应该都知道这个点，但是还是觉得有必要写出来，再次提醒一下其他小伙伴，避免踩坑。
问题根源 其中，在找到的漏洞出现的地方，都存在类似以下这样的 slim 代码：
input class=&amp;#39;xxx&amp;#39; value==params[:account] 问题就出在双等号 == 上，因为在 slim 跟 ERB 模板（其他模板比如 HAML 之类的就不清楚了）中，双等号其实是 Rails 的 raw 这个 helper 方法的缩写，参考链接：
To insert something verbatim use the raw helper rather than calling html_safe:
&amp;lt;%= raw @cms.current_template %&amp;gt; &amp;lt;%# inserts @cms.current_template as is %&amp;gt; or, equivalently, use &amp;lt;%==:
&amp;lt;%== @cms.current_template %&amp;gt; &amp;lt;%# inserts @cms.current_template as is %&amp;gt; 也就是说上面的代码等同于：
input class=&amp;#39;xxx&amp;#39; value=raw(params[:account]) 其中 raw 方法在 Rails 文档中的解释是这样子的：</description></item></channel></rss>