<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Decimal on Hackerpie</title><link>https://blog.hackerpie.com/tags/decimal/</link><description>Recent content in Decimal on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 02 Mar 2022 18:31:18 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/decimal/index.xml" rel="self" type="application/rss+xml"/><item><title>MySQL + go 如何安全处理 decimal 类型数据</title><link>https://blog.hackerpie.com/posts/mysql/handle-decimal-fields/</link><pubDate>Wed, 02 Mar 2022 18:31:18 +0800</pubDate><guid>https://blog.hackerpie.com/posts/mysql/handle-decimal-fields/</guid><description>&lt;p>在电商或者金融相关的场景中，商品价格等数据都会涉及到小数的表示或者计算，如果使用编程语言内置的浮点数类型，会有精度丢失的风险。在应用领域，&lt;code>decimal&lt;/code> 类型应运而生，MySQL 数据库中内置支持 &lt;code>decimal&lt;/code> 数据类型，而程序设计上，一般编程语言都会有标准库或者第三方库对 &lt;code>decimal&lt;/code> 类型提供实现。本文快速展示下如何实现全链路对 &lt;code>decimal&lt;/code> 类型数据的读取处理，而不用担心会丢失数据的精度。&lt;/p>
&lt;h2 id="数据库层---mysql">数据库层 - MySQL&lt;/h2>
&lt;p>在 MySQL 层，&lt;code>decimal&lt;/code> 类型的值使用二进制表示，其大致转换过程是：&lt;/p>
&lt;ol>
&lt;li>将待存储的数据按照整数和小数部分一分为二，比如 &lt;code>1234567890.1234&lt;/code>，分为 &lt;code>1234567890&lt;/code> 和 &lt;code>1234&lt;/code>；&lt;/li>
&lt;li>针对整数部分，从低位到高位，按照每 9 位数字为一组，进行分割，比如 &lt;code>1234567890&lt;/code> 将分为 &lt;code>1&lt;/code> 和 &lt;code>234567890&lt;/code>；&lt;/li>
&lt;li>使用最短字节序列分别表示每个分组的整数，上面的 &lt;code>1&lt;/code> 即 &lt;code>0b00000001&lt;/code>，而 &lt;code>234567890&lt;/code> 则对应 &lt;code>0x0D-FB-38-D2&lt;/code>；&lt;/li>
&lt;li>对于小数部分，使用类似的分组（从高位到低位）处理方式，即 1234 表示为 &lt;code>0x04D2&lt;/code>；&lt;/li>
&lt;li>最后，将最高位置反，得到 &lt;code>0x81 0D FB 38 D2 04 D2&lt;/code>，也就是使用了 7 个字节来表示这个数字。&lt;/li>
&lt;/ol>
&lt;p>Bonus: 如果是小数，比如 &lt;code>-1234567890.1234&lt;/code>，则只需要将上面第 5 步的所有位置反即可，也就是 &lt;code>0x7E F2 04 C7 2D FB 2D&lt;/code>&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>MySQL 通过设计巧妙的可变长度的二进制转换，实现了对严格要求精度的小数的表示。&lt;/p>
&lt;h2 id="网络传输层---mysql">网络传输层 - MySQL&lt;/h2>
&lt;p>存储在 MySQL 底层存储上的 decimal，我们知道是二进制了之后，也就对精度问题的持久化存储放心了，但是，又带来两个问题：&lt;/p></description></item></channel></rss>