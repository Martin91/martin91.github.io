<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nil on Hackerpie</title><link>https://blog.hackerpie.com/tags/nil/</link><description>Recent content in nil on Hackerpie</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 20 Sep 2023 12:20:18 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/nil/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang interface 类型的 nil 居然不等于字面量 nil?</title><link>https://blog.hackerpie.com/posts/golang/nil-interface-is-not-equal-to-leteral-nil/</link><pubDate>Wed, 20 Sep 2023 12:20:18 +0800</pubDate><guid>https://blog.hackerpie.com/posts/golang/nil-interface-is-not-equal-to-leteral-nil/</guid><description>问题描述 昨天开发的一段代码在运行时遇到了奇怪的 panic 问题，报错：
runtime error: invalid memory address or nil pointer dereference 但是奇怪的是，代码中 panic 出处，我是有判断 nil 的：
// 这是相关的结构体定义 type Options struct { sourceFrame fmt.Stringer // 错误根源栈页 } // 省略一堆无关代码 if options.sourceFrame != nil { // 这里判断了 options.sourceFrame 是否为 nil metaData[metaKeySourceFrame] = options.sourceFrame.String() // 这一行代码触发 panic } 好奇怪，我不是都判断了是否为 nil 了吗？为什么还会报错呢？
问题分析 经过一番搜索和学习，最终发现 golang 的一个坑：interface 类型的 nil 不等于字面量 nil。
Under the hood, an interface in Golang consists of two elements: type and value.</description></item></channel></rss>