<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL on Hackerpie</title><link>https://blog.hackerpie.com/tags/mysql/</link><description>Recent content in MySQL on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 20 Jun 2021 11:29:00 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>解决 Mac OS 下 MySQL 客户端连接 caching_sha2_password 插件加载失败问题</title><link>https://blog.hackerpie.com/posts/2021/fix-mysql-caching-sha2-password-problem/</link><pubDate>Sun, 20 Jun 2021 11:29:00 +0800</pubDate><guid>https://blog.hackerpie.com/posts/2021/fix-mysql-caching-sha2-password-problem/</guid><description>&lt;h2 id="背景">背景&lt;/h2>
&lt;p>在开发我自己的 &lt;a href="https://github.com/Martin91/gofixtures">&lt;code>gofixtures&lt;/code>&lt;/a> 项目时，项目单测需要用到 MySQL，于是模仿 go-txdb 的方式，使用 docker 在本地起了 MySQL 容器。执行测试时，出现如下错误：&lt;/p>
&lt;pre tabindex="0">&lt;code>mysql: [Warning] Using a password on the command line interface can be insecure.
ERROR 2059 (HY000): Authentication plugin &amp;#39;caching_sha2_password&amp;#39; cannot be loaded: dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image not found
&lt;/code>&lt;/pre>&lt;h2 id="原因分析">原因分析&lt;/h2>
&lt;p>结论：本地客户端版本过低，不支持服务器端版本的鉴权方式。&lt;/p>
&lt;h3 id="环境">环境&lt;/h3>
&lt;p>客户端：&lt;/p>
&lt;ul>
&lt;li>&lt;code>mysql Ver 14.14 Distrib 5.7.13, for osx10.11 (x86_64) using EditLine wrapper&lt;/code>&lt;/li>
&lt;li>macOS 10.14.6 Mojave&lt;/li>
&lt;/ul>
&lt;p>服务器端：&lt;/p>
&lt;ul>
&lt;li>version: 8.0.25&lt;/li>
&lt;li>runtime environment: docker container&lt;/li>
&lt;/ul>
&lt;h3 id="原因">原因&lt;/h3>
&lt;p>MySQL 从 8.0 版本开始缺省使用 &lt;code>caching_sha2_password&lt;/code> 作为验证方式，而 5.7 并不支持这种验证方式（5.7 默认使用 &lt;code>mysql_native_password&lt;/code>）。&lt;/p></description></item><item><title>pymysql 开启调试模式</title><link>https://blog.hackerpie.com/posts/2019/enable-debug-mode-of-pymysql/</link><pubDate>Sun, 18 Aug 2019 18:32:01 +0800</pubDate><guid>https://blog.hackerpie.com/posts/2019/enable-debug-mode-of-pymysql/</guid><description>&lt;p>今天在排查线上一个奇怪的数据库连接问题，所以打开了 pymysql 的源码在阅读，发现 pymysql 在其 &lt;code>connections&lt;/code> 模块里内置了一个 &lt;code>DEBUG&lt;/code> 变量用于控制是否开启调试模式，是的话，会将当前连接的操作以及报文内容都打印到控制台。&lt;/p>
&lt;h4 id="使用方法">使用方法&lt;/h4>
&lt;p>在你的服务器初始化代码里，加上对 &lt;code>DEBUG&lt;/code> 的设置，比如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="font-weight:bold">import&lt;/span> &lt;span style="font-weight:bold">pymysql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pymysql.install_as_MySQLdb()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pymysql.connections.DEBUG = &lt;span style="font-weight:bold">True&lt;/span> &lt;span style="font-style:italic"># 这是我新加的一行&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启服务器后，访问相关接口，会看到标准输出里有类似下面的一些输出：&lt;/p>
&lt;p>

 &lt;img src="https://blog.hackerpie.com/images/pymysql-debug.png" alt="clipboard.png">
&lt;/p></description></item></channel></rss>