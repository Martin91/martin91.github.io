<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>单调栈 on Hackerpie</title><link>https://blog.hackerpie.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/</link><description>Recent content in 单调栈 on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Wed, 04 Aug 2021 23:13:28 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/%E5%8D%95%E8%B0%83%E6%A0%88/index.xml" rel="self" type="application/rss+xml"/><item><title>数据结构：单调栈</title><link>https://blog.hackerpie.com/posts/algorithms/monotonous-stacks/monotonous-stacks/</link><pubDate>Wed, 04 Aug 2021 23:13:28 +0800</pubDate><guid>https://blog.hackerpie.com/posts/algorithms/monotonous-stacks/monotonous-stacks/</guid><description>&lt;h1 id="什么是单调栈">什么是单调栈&lt;/h1>
&lt;p>单调栈是指从栈顶到栈底，栈内元素的值符合单调性的一种特殊数据结构。从栈顶到栈底，元素的值单调递减，称为单调递减栈；反之，称为单调递增栈。&lt;/p>
&lt;pre tabindex="0">&lt;code> \ 9 / \ 1 /
 | 7 | | 3 |
 | 5 | | 5 |
 | 3 | | 7 |
 | 2 | | 9 |
 ------- -------
单调递减栈 单调递增栈
&lt;/code>&lt;/pre>&lt;h1 id="单调栈的维护">单调栈的维护&lt;/h1>
&lt;p>为了维持栈的单调性，在往栈内插入元素时，需要比较循环比较栈顶元素与待插入元素的值的大小，以单调递增栈举例，需要始终确保栈顶元素的值大于等于待插入元素的值方可插入，否则需要先弹出栈顶元素之后，重复“检查-弹出”的流程，直到栈为空，或者栈顶元素的值大于等于待插入元素的值。&lt;/p>
&lt;p>假设需要插入的元素按照序列 &lt;code>5, 2, 3, 7, 1&lt;/code> 从左到右遍历，且需要维护单调递增栈，则插入过程为：&lt;/p>
&lt;pre tabindex="0">&lt;code> \ / \ / \ / \ / \ /
 | | | 2 | | 3 | | | | 1 |
 | 5 | | 5 | | 5 | | 7 | | 7 |
 ------- ------- ------- ------- -------
 (1) (2) (3) (4) (5)
&lt;/code>&lt;/pre>&lt;p>(1) 待插入 5，栈为空，直接插入 5；&lt;br>
(2) 待插入 2，栈顶元素为 5，大于待插入元素 2，2 可以直接插入；&lt;br>
(3) 待插入 3，栈顶元素为 2，不满足大于等于 3 的要求，所以弹出栈顶元素 2；此时新的栈顶元素为 5，大于 3，3 直接入栈；&lt;br>
(4) 待插入 7，栈顶元素为 3，不满足大于等于 7 的要求，所以弹出栈顶元素 3；此时新的栈顶元素为 5，仍然小于 7，于是也弹出栈顶元素 5；最后栈为空，直接插入 7；&lt;br>
(5) 待插入 1，栈顶元素为 7，大于待插入元素 1，1 可以直接入栈。&lt;/p></description></item></channel></rss>