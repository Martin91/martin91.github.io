<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on Hackerpie</title><link>https://blog.hackerpie.com/tags/api/</link><description>Recent content in API on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Mon, 14 Jan 2019 09:22:19 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>利用 Postman Chrome app 和 Chrome 浏览器共享网站 cookie</title><link>https://blog.hackerpie.com/posts/2019/share-cookies-between-chrome-and-postman/</link><pubDate>Mon, 14 Jan 2019 09:22:19 +0800</pubDate><guid>https://blog.hackerpie.com/posts/2019/share-cookies-between-chrome-and-postman/</guid><description>声明 文章内容已过期，Postman 桌面版已实现本文末尾的缺憾，可直接阅读官方博客。
背景 作为一个Web工程师，最熟悉的日常工作莫过于后台接口开发与联调测试，而在接口测试上，大家最喜爱的工具清单里，必然少不了 Postman 这一利器。然而，有时接口测试需要准备好登录态，或者其他状态数据，而这些数据往往就存在浏览器 Cookie 里边。结合本文介绍的工具，便可以无缝在 Postman Chrome app （为什么强调是 Postman Chrome app，文章末尾会说明）和 Chrome 浏览器之间共享 Cookie，而这个共享过程对用户是透明的。
工具清单 以下工具请自行安装，我只贴下官方的软件界面截图。
Chrome 浏览器 Postman Chrome app Postman Interceptor 使用步骤 以下我们以 Github 网站为例，演示下如何实现 Cookie 共享。
一、确认 Postman Interceptor 插件安装成功（如图所示） 二、启动 Postman，在右上角的卫星小图标那里开启 Chrome Interceptor 三、在 Chrome 浏览器里正常登陆 GitHub 网站（此步骤没什么好演示的 ╭(╯^╰)╮） 四、在 Postman Chrome app 中直接模拟请求通知接口 接口路径：https://github.com/notifications?_pjax=%23js-pjax-container 也就是说，这个时候，我们虽然没有对 Postman 做特殊的 Cookie 设置，但是它的请求的登录态都被服务器验证通过了，cookie 共享成功！
假如这个时候退出浏览器的登录态呢？ 我们先从 GitHub 退出登录，还是刚才的请求，这个时候的响应是： 是的，因为 Chrome 里已经退出登录，所以 Postman 这边也自然失去登录态了，说明两边 Cookie 是同步的。</description></item></channel></rss>