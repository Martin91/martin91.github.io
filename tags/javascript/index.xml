<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Hackerpie</title><link>https://blog.hackerpie.com/tags/javascript/</link><description>Recent content in JavaScript on Hackerpie</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Sun, 31 Jul 2022 09:46:20 +0800</lastBuildDate><atom:link href="https://blog.hackerpie.com/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>stimulus.js 初体验</title><link>https://blog.hackerpie.com/posts/frontend/stimulus-js-early-experience/</link><pubDate>Sun, 31 Jul 2022 09:46:20 +0800</pubDate><guid>https://blog.hackerpie.com/posts/frontend/stimulus-js-early-experience/</guid><description>&lt;p>&lt;code>stimulus.js&lt;/code> 框架是一个轻量的 JavaScript 框架，由大名鼎鼎的 Basecamp 公司开发，也就是 Ruby on Rails 框架核心开发团队所在的公司。老早就听说了 stimulus.js 框架，但是没有实际使用过。最近刚好在自己的一个小项目中有了实践的机会，有了一些心得体会，总结分享一下。&lt;/p>
&lt;p>提醒：如果想快速体验 stimulus.js 做出来的 demo，可以看看这个 &lt;a href="https://github.com/chloerei/todomvc-stimulus">todomvc-stimulus&lt;/a>。&lt;/p>
&lt;h1 id="一个克制的前端-javascript-框架">一个克制的前端 JavaScript 框架&lt;/h1>
&lt;p>谈起对 &lt;code>stimulus.js&lt;/code> 框架总的印象，我觉得这是一个非常克制的前端 JavaScript 框架。它聚焦于&lt;strong>在 HTML 元素与 JavaScript 对象的绑定&lt;/strong>这件事情上，并且这种绑定是单向的，不是前端开发中早已非常普遍的双向绑定。除此之外，它没有提供其他额外的功能。&lt;/p>
&lt;p>由于它的克制，&lt;strong>轻量&lt;/strong>是它必然而然的第一个优点。其次，配合其所设计的 &lt;code>controller&lt;/code> 的概念，可以实现交互逻辑里状态的隔离与解耦。最后，它在 &lt;code>controller&lt;/code> 代码的组织上，也让熟悉 Rails 开发的人感到亲切：&lt;strong>约定大于配置&lt;/strong>。每个 &lt;code>controller&lt;/code> 的定义，都需要按照约定，一个 &lt;code>controller&lt;/code> 对应一个文件，放在 &lt;code>controllers&lt;/code> 目录下，且文件名与 &lt;code>controller&lt;/code> 的名字一致。&lt;/p>
&lt;h2 id="stimulusjs-的轻量">&lt;code>Stimulus.js&lt;/code> 的轻量&lt;/h2>
&lt;p>&lt;code>Stimulus.js&lt;/code> 的核心概念非常少，想要上手 &lt;code>stimulus.js&lt;/code> 框架的使用，只有 4 个核心概念是需要了解的。&lt;/p>
&lt;h3 id="controllers">&lt;code>Controllers&lt;/code>&lt;/h3>
&lt;p>&lt;code>Controllers&lt;/code> 是声明了诸如 &lt;code>data-controller=&amp;quot;todos&amp;quot;&lt;/code> 这样的 data 属性的 HTML 元素所绑定的 JavaScript 对象：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="font-weight:bold">div&lt;/span> data-controller=&lt;span style="font-style:italic">&amp;#34;todos&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>stimulus.js&lt;/code> 会自动为所有此类元素实例化对应的 controller，每个此类元素各自绑定一个实例。以上述例子来说，&lt;code>stimulus.js&lt;/code> 会自动查找位于 &lt;code>app/javascript/controllers/todos_controller.js&lt;/code> 的文件，并且导入其中导出的默认类，这是一个经典的&lt;strong>约定大于配置&lt;/strong>的做法：&lt;/p></description></item></channel></rss>